@{
    Layout = "_DetailsLayout";
}

@using System.Collections.Specialized
@using Microsoft.Extensions.Options
@using Tolab.Common
@model TolabPortal.DataAccess.Models.LiveDetails;
@inject ISessionManager sessionManager;
@inject IOptions<ApplicationConfig> options;

@{
    ViewBag.itemDetails = Model.ItemDetails;
    var config = options.Value;

}

<link type="text/css" rel="stylesheet" href="https://source.zoom.us/2.0.1/css/bootstrap.css" />
<link type="text/css" rel="stylesheet" href="https://source.zoom.us/2.0.1/css/react-select.css" />

<script src="https://source.zoom.us/2.0.1/lib/vendor/react.min.js"></script>
<script src="https://source.zoom.us/2.0.1/lib/vendor/react-dom.min.js"></script>
<script src="https://source.zoom.us/2.0.1/lib/vendor/redux.min.js"></script>
<script src="https://source.zoom.us/2.0.1/lib/vendor/redux-thunk.min.js"></script>
<script src="https://source.zoom.us/2.0.1/lib/vendor/lodash.min.js"></script>
<script src="https://source.zoom.us/2.0.1/zoom-meeting-embedded-2.0.1.min.js"></script>
@*<script src="https://source.zoom.us/zoom-meeting-2.0.1.min.js"></script>*@

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<!--======================================
        START COURSE DETAILS AREA
======================================-->
<section class="course-details-area pb-20px bg-grligh">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 pb-5">
                <div class="course-details-content-wrap pt-50px">
                    @if (Model.IsCurrentStudentSubscribedToLive)
                    {

                        // ========== Remove below code that rendering a video from remote url and use ZOOM SDK instead ==========

                        <!--<div class="course-overview-card">
                            <video controls crossorigin playsinline id="player">-->
                        <!-- Video files -->
                        <!--<source src="https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-576p.mp4" type="video/mp4" />
                                <source src="https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-720p.mp4" type="video/mp4" />
                                <source src="https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-1080p.mp4" type="video/mp4" />
                            </video>
                        </div>-->
                        <!-- end course-overview-card -->

                        <button id="btnJoinMeeting" class="btn btn-primary">Join Meeting</button>

                        <div id="meetingSDKElement" style="width: 1000px; height: 600px; z-index: 1100; min-width: 980px">
                        </div>

                        <script>
                        if (!crossOriginIsolated) SharedArrayBuffer = ArrayBuffer;
                            $('#btnJoinMeeting').click(function() {

                                var client = ZoomMtgEmbedded.createClient();

                                var meetingSDKElement = document.getElementById('meetingSDKElement');

                                client.init({
                                    debug: true,
                                    disableInvite: true,
                                    disableCallOut: true,
                                    disableRecord: true,
                                    videoDrag: false,
                                    zoomAppRoot: meetingSDKElement,
                                    language: 'en-US',

                                    customize: {
                                        meetingInfo: ['topic', 'host','enctype'],
                                        toolbar: {

                                        }
                                    }
                                });

                                var meetingNumber = '@Model.MeetingId';
                                var userName = '@sessionManager.UserName';
                                var apiKey = '@config.ZoomApiKey';
                                var userEmail = "";
                                var password = '@Model.MeetingPassword';

                                client.join({
                                    apiKey: apiKey,
                                    signature: '@Model.MeetingSignature',
                                    meetingNumber: meetingNumber,
                                    password: password,
                                    userName: userName
                                });
                            });
                        </script>
                    }
                    else
                    {
                        // If student is NOT subscribed yet, What we need to show ??
                    }
                </div><!-- end course-details-content-wrap -->
            </div><!-- end col-lg-8 -->
            <div class="col-lg-4" style="z-index: 2;">
                <div class="sidebar sidebar-negative">
                    <div class="card card-item">
                        <div class="card-body">
                            <div class="preview-course-video">
                                <a>
                                    <img src="images/img-loading.png" data-src="/images/course001.jpg" class="w-100 rounded lazy screensh">
                                    <div class="preview-course-video-content">
                                        <div class="overlay"></div>
                                        @if (Model.LiveRemainingTime == "يعرض الآن")
                                        {
                                            <div class="play-button">
                                                <img class="soonlive" src="/images/live-active.svg">
                                            </div>
                                            <p class="fs-15 font-weight-bold text-white pt-3"> @Model.LiveRemainingTime </p>
                                        }
                                        else
                                        {
                                            <div class="play-button">
                                                <img class="soonlive" src="/images/live-inactive.svg">
                                            </div>
                                            <p class="fs-15 font-weight-bold text-white pt-3"> @Model.LiveRemainingTime </p>
                                        }
                                    </div>
                                </a>
                            </div><!-- end preview-course-video -->
                            <div class="preview-course-feature-content pt-30px">
                                <p class="d-flex align-items-center pb-40px">
                                    <span class="fs-35 font-weight-semi-bold text-black"> @Model.CurrentCost </span>
                                    <!--<span class="before-price mx-1">60 ج.م</span> -->
                                </p>
                                @if (Model.IsCurrentStudentSubscribedToLive)
                                {
                                    <div class="buy-course-btn-box pb-4">
                                        <div class="regdone">
                                            <img src="/images/check.svg" width="28"> تم الاشتراك
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @await Component.InvokeAsync("MyFatoorahPayment",
                                     new PayVm
                                         {
                                            InvoiceAmount = Model.CurrentCost,
                                            TransactionId = Model.Id.ToString(),
                                            TransactionType = (int)TransactionType.Live,
                                            ReturnRoute = $"/Lives/liveDetails?liveId={Model.Id}",
                                             CssClassName = "btn-block"
                                         })
                                }
                                <div class="preview-course-incentives">
                                    <h3 class="card-title fs-18 pb-2">معلومات البث</h3>
                                    <ul class="generic-list-item">
                                        <li><img class="mr-2" src="/images/time.svg" width="14">@(Model.Duration) دقيقة  تشغيل</li>
                                        <li><img class="mr-2" src="/images/subscriber.svg" width="14">@Model.SubscriptionCount مشترك</li>
                                    </ul>
                                </div><!-- end preview-course-incentives -->
                            </div><!-- end preview-course-content -->
                        </div>
                    </div><!-- end card -->
                </div><!-- end sidebar -->
            </div><!-- end col-lg-4 -->
        </div><!-- end row -->
    </div><!-- end container -->
</section><!-- end course-details-area -->
<!--======================================
        END COURSE DETAILS AREA
======================================-->

@section scripts{

}